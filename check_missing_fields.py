#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–æ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import sqlite3
import os

def check_missing_fields():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –≤—ã–≤–æ–¥–∏—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_files = ['tournament.db', 'instance/tournaments.db']
    db_file = None
    
    for file_path in db_files:
        if os.path.exists(file_path):
            db_file = file_path
            break
    
    if not db_file:
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {db_file}")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –ø–æ–ª—è –¥–ª—è –∫–∞–∂–¥–æ–π —Ç–∞–±–ª–∏—Ü—ã
    expected_fields = {
        'user': ['id', 'username', 'password_hash', 'role', 'created_at'],
        'tournament': ['id', 'name', 'description', 'start_date', 'end_date', 'max_participants', 
                      'court_count', 'match_duration', 'break_duration', 'sets_to_win', 
                      'points_to_win', 'points_win', 'points_draw', 'points_loss', 
                      'start_time', 'end_time', 'created_at', 'created_by'],
        'participant': ['id', 'tournament_id', 'user_id', 'name', 'is_team', 'points', 'registered_at'],
        'match': ['id', 'tournament_id', 'participant1_id', 'participant2_id', 'match_date', 
                 'match_time', 'court_number', 'match_number', 'score1', 'score2', 'score', 
                 'sets_won_1', 'sets_won_2', 'winner_id', 'status', 'created_at', 'updated_at'],
        'notification': ['id', 'user_id', 'message', 'is_read', 'created_at'],
        'match_log': ['id', 'match_id', 'action', 'details', 'created_at']
    }
    
    missing_fields = {}
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Ç–∞–±–ª–∏—Ü—É
    for table_name, expected_columns in expected_fields.items():
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
            cursor.execute(f"PRAGMA table_info({table_name})")
            existing_columns = [row[1] for row in cursor.fetchall()]
            
            # –ù–∞—Ö–æ–¥–∏–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è
            missing = [col for col in expected_columns if col not in existing_columns]
            
            if missing:
                missing_fields[table_name] = missing
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ '{table_name}' - –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è: {', '.join(missing)}")
            else:
                print(f"‚úÖ –¢–∞–±–ª–∏—Ü–∞ '{table_name}' - –≤—Å–µ –ø–æ–ª—è –Ω–∞ –º–µ—Å—Ç–µ")
                
        except sqlite3.OperationalError as e:
            if "no such table" in str(e):
                print(f"‚ùå –¢–∞–±–ª–∏—Ü–∞ '{table_name}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                missing_fields[table_name] = expected_columns
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã '{table_name}': {e}")
    
    conn.close()
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    if missing_fields:
        print(f"\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
        print(f"üî¥ –ù–∞–π–¥–µ–Ω–æ {len(missing_fields)} —Ç–∞–±–ª–∏—Ü —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –ø–æ–ª—è–º–∏:")
        for table, fields in missing_fields.items():
            print(f"   - {table}: {', '.join(fields)}")
    else:
        print(f"\n‚úÖ –í–°–ï –ü–û–õ–Ø –ù–ê –ú–ï–°–¢–ï! –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –º–æ–¥–µ–ª—è–º.")
    
    return missing_fields

if __name__ == "__main__":
    check_missing_fields()


