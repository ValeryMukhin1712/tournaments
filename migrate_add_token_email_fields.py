#!/usr/bin/env python3
"""
–ú–∏–≥—Ä–∞—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –≤ —Ç–∞–±–ª–∏—Ü—É —Ç–æ–∫–µ–Ω–æ–≤
"""

import sqlite3
import os
from datetime import datetime

def migrate_token_table():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email –≤ —Ç–∞–±–ª–∏—Ü—É tokens"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = 'instance/tournament.db'
    if not os.path.exists(db_path):
        db_path = 'tournament.db'
    
    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print(f"üìä –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã tokens
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name='tokens'")
        if not cursor.fetchone():
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ 'tokens' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ –Ω–æ–≤—ã–µ –ø–æ–ª—è
        cursor.execute("PRAGMA table_info(tokens)")
        columns = [column[1] for column in cursor.fetchall()]
        
        new_fields = [
            ('email_sent', 'BOOLEAN DEFAULT 0'),
            ('email_sent_at', 'DATETIME'),
            ('email_status', 'VARCHAR(50) DEFAULT "pending"')
        ]
        
        fields_to_add = []
        for field_name, field_type in new_fields:
            if field_name not in columns:
                fields_to_add.append((field_name, field_type))
                print(f"‚ûï –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ: {field_name} {field_type}")
            else:
                print(f"‚úÖ –ü–æ–ª–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {field_name}")
        
        if not fields_to_add:
            print("‚úÖ –í—Å–µ –ø–æ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
            return True
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø–æ–ª—è
        for field_name, field_type in fields_to_add:
            try:
                cursor.execute(f"ALTER TABLE tokens ADD COLUMN {field_name} {field_type}")
                print(f"‚úÖ –ü–æ–ª–µ {field_name} –¥–æ–±–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            except sqlite3.Error as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è {field_name}: {e}")
                return False
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏
        cursor.execute("UPDATE tokens SET email_status = 'pending' WHERE email_status IS NULL")
        cursor.execute("UPDATE tokens SET email_sent = 0 WHERE email_sent IS NULL")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏
        cursor.execute("SELECT COUNT(*) FROM tokens")
        total_tokens = cursor.fetchone()[0]
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {total_tokens} –∑–∞–ø–∏—Å–µ–π —Ç–æ–∫–µ–Ω–æ–≤")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False
    finally:
        if 'conn' in locals():
            conn.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π email –≤ —Ç–∞–±–ª–∏—Ü—É —Ç–æ–∫–µ–Ω–æ–≤")
    print("=" * 60)
    
    success = migrate_token_table()
    
    print("=" * 60)
    if success:
        print("üéâ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("üí• –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏!")
