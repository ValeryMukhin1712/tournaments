#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ—à–∞ SQLAlchemy
"""
import os
import sys
import sqlite3

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

from app import app, db
from models.user import create_user_model
from models.tournament import create_tournament_model
from models.participant import create_participant_model
from models.match import create_match_model
from models.notification import create_notification_model
from models.match_log import create_match_log_model

# –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª–∏
User = create_user_model(db)
Tournament = create_tournament_model(db)
Participant = create_participant_model(db)
Match = create_match_model(db)
Notification = create_notification_model(db)
MatchLog = create_match_log_model(db)

def fix_sqlalchemy_cache():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–µ—à SQLAlchemy –∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—ã"""
    with app.app_context():
        try:
            print("üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
            print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            print("\nüßπ –û—á–∏—â–∞–µ–º –∫–µ—à SQLAlchemy...")
            # –û—á–∏—â–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
            db.metadata.clear()
            print("‚úÖ –ö–µ—à SQLAlchemy –æ—á–∏—â–µ–Ω")
            
            print("\nüî® –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Ö–µ–º–æ–π...")
            # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã
            db.create_all()
            print("‚úÖ –¢–∞–±–ª–∏—Ü—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω—ã")
            
            print("\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à SQLAlchemy...")
            # –û–±–Ω–æ–≤–ª—è–µ–º –∫–µ—à
            db.metadata.reflect(bind=db.engine)
            print("‚úÖ –ö–µ—à SQLAlchemy –æ–±–Ω–æ–≤–ª–µ–Ω")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã participant
            print("\nüìã –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã participant:")
            db_uri = app.config['SQLALCHEMY_DATABASE_URI']
            if db_uri.startswith('sqlite:///'):
                db_path = db_uri.replace('sqlite:///', '')
                conn = sqlite3.connect(db_path)
                cursor = conn.cursor()
                
                cursor.execute("PRAGMA table_info(participant)")
                columns = cursor.fetchall()
                for col in columns:
                    print(f"   - {col[1]} ({col[2]})")
                
                conn.close()
            
            print("\n‚úÖ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã: {e}")
            return False
        
        return True

if __name__ == "__main__":
    success = fix_sqlalchemy_cache()
    if success:
        print("\nüöÄ –ì–æ—Ç–æ–≤–æ! –ó–∞–ø—É—Å–∫–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π: python app.py")
    else:
        print("\nüí• –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")
